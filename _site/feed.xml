<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
<title type="text">Kévin Renella</title>
<generator uri="https://github.com/mojombo/jekyll">Jekyll</generator>
<link rel="self" type="application/atom+xml" href="http://localhost:4000/feed.xml" />
<link rel="alternate" type="text/html" href="http://localhost:4000" />
<updated>2014-04-09T18:57:29+02:00</updated>
<id>http://localhost:4000/</id>
<author>
  <name>Kévin Renella</name>
  <uri>http://localhost:4000/</uri>
  <email>kevin.renella@email.com</email>
</author>


<entry>
  <title type="html"><![CDATA[Image processing - SKFCM algorithm]]></title>
  <link rel="alternate" type="text/html" href="http://localhost:4000/articles/skfcm-algorithm/"/>
  <id>http://localhost:4000/articles/skfcm-algorithm</id>
  <updated>2014-04-08T00:00:00-00:00</updated>
  <published>2014-02-01T00:00:00+01:00</published>
  
  <author>
    <name>Kévin Renella</name>
    <uri>http://localhost:4000</uri>
    <email>kevin.renella@email.com</email>
  </author>
  <content type="html">&lt;h2 id=&quot;subject-presentation&quot;&gt;Subject presentation&lt;/h2&gt;

&lt;p&gt;Image segmentation plays a crucial role in many areas of medical imaging. We have implemented a solution for segmenting image from the article [31] Dao-Qiang Zhang and Chen Song-Can, researchers from the Chinese Academy of Sciences (coupled to the computer department of the Chinese University of Aeronautics and astronautics).&lt;/p&gt;

&lt;p&gt;The image processing method presented in this article, Spatially constrained KFCM (SKFCM) allows an image segmentation fuzzy regions, inspired by the Fuzzy C-Means method (FCM), but using a distance induced by a kernel function (from vector machines support or SVM), and a consideration of the neighborhood by the introduction of spatial constraints in the objective function of FCM.&lt;/p&gt;

&lt;h2 id=&quot;theory&quot;&gt;Theory&lt;/h2&gt;

&lt;p&gt;It is first necessary to define what a fuzzy set.&lt;/p&gt;

&lt;p&gt;A fuzzy set is a set whose edges are poorly defined. This results to a membership function values in [0,1], as opposed to the conventional case where the membership function takes two values 0 or 1. This allows to define sets of a more flexible manner, tolerant inaccurate, incomplete and / or uncertain.&lt;/p&gt;

&lt;p&gt;This property is exploited by image processing, and more precisely in classification where the classes, also known as regions are represented by fuzzy sets. This is useful when the regions can not be defined clearly and precisely. Their handling gradant the vagueness can handle imprecise data, uncertain and / or redundant in a more flexible manner.&lt;/p&gt;

&lt;p&gt;Fuzzy clustering allows overlapping classes (also called regions). A non-fuzzy segmentation can be obtained by assigning each pixel to the class for which its membership degree is maximum.&lt;/p&gt;

&lt;p&gt;The algorithm of the Fuzzy C-Means (FCM) is a fuzzy clustering algorithm based on optimization of a quadratic criterion of classification where each class is represented by its center of gravity. The algorithm requires knowing the number of classes in advance and generates classes itératiff process by minimizing an objective function. Thus, it provides a fuzzy partition of the image by giving each pixel a degree of membership in a given region.&lt;/p&gt;

&lt;h2 id=&quot;results&quot;&gt;Results&lt;/h2&gt;

&lt;figure class=&quot;third&quot;&gt;
    &lt;a href=&quot;/images/skfcm-algorithm/brain.jpg&quot;&gt;&lt;img src=&quot;/images/skfcm-algorithm/brain-small.jpg&quot; /&gt;&lt;/a&gt;
    &lt;a href=&quot;/images/skfcm-algorithm/brain-exclusive.jpg&quot;&gt;&lt;img src=&quot;/images/skfcm-algorithm/brain-exclusive-small.jpg&quot; /&gt;&lt;/a&gt;
    &lt;a href=&quot;/images/skfcm-algorithm/brain-shared.jpg&quot;&gt;&lt;img src=&quot;/images/skfcm-algorithm/brain-shared-small.jpg&quot; /&gt;&lt;/a&gt;
	&lt;figcaption&gt;SKFCM on brain RMI images&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure class=&quot;third&quot;&gt;
    &lt;a href=&quot;/images/skfcm-algorithm/fish.jpg&quot;&gt;&lt;img src=&quot;/images/skfcm-algorithm/fish.jpg&quot; /&gt;&lt;/a&gt;
    &lt;a href=&quot;/images/skfcm-algorithm/fish-exclusive.jpg&quot;&gt;&lt;img src=&quot;/images/skfcm-algorithm/fish-exclusive.jpg&quot; /&gt;&lt;/a&gt;
    &lt;a href=&quot;/images/skfcm-algorithm/fish-shared.jpg&quot;&gt;&lt;img src=&quot;/images/skfcm-algorithm/fish-shared.jpg&quot; /&gt;&lt;/a&gt;
	&lt;figcaption&gt;SKFCM on a fish&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;The SKFCM algorithm provides a segmented image noised and respecting the fuzzy regions of the original image. Indeed, this aspect is very well represented by the picture of the fish. In the original image can be difficult to distinguish caudal fins of fish. With SKFCM algorithm, fuzzy segmentation and reconstruction help highlight these fins on the processed image.&lt;/p&gt;

&lt;p&gt;On MRI images taken in recent appear slightly noisy. It is for this reason that conventional segmentation methods as FCM does not allow a clear image segmentation. However, algortihme SKFCM provides a clear segmented image from an image with Gaussian noise characteristic of catches taken by magnetic resonance. That is why this method seems very appropriate for this kind of images, particularly useful for the detection of tumors in the brain.&lt;/p&gt;

&lt;h2 id=&quot;github&quot;&gt;GitHub&lt;/h2&gt;

&lt;p&gt;Our implementation of the SKFCM algorithm is Open Source and &lt;a href=&quot;https://github.com/Drusy/SKFCM-Algorithm&quot;&gt;can be found on GitHub there&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;we-were-2-working-on-this-project&quot;&gt;We were 2 working on this project&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Maxime Arriaza&lt;/li&gt;
  &lt;li&gt;Kévin Renella&lt;/li&gt;
&lt;/ul&gt;

  &lt;p&gt;&lt;a href=&quot;http://localhost:4000/articles/skfcm-algorithm/&quot;&gt;Image processing - SKFCM algorithm&lt;/a&gt; was originally published by Kévin Renella at &lt;a href=&quot;http://localhost:4000&quot;&gt;Kévin Renella&lt;/a&gt; on February 01, 2014.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[GrailsOverflow]]></title>
  <link rel="alternate" type="text/html" href="http://localhost:4000/articles/grailsoverflow/"/>
  <id>http://localhost:4000/articles/grailsoverflow</id>
  <updated>2014-04-08T00:00:00-00:00</updated>
  <published>2014-01-01T00:00:00+01:00</published>
  
  <author>
    <name>Kévin Renella</name>
    <uri>http://localhost:4000</uri>
    <email>kevin.renella@email.com</email>
  </author>
  <content type="html">&lt;p&gt;GrailsOverflow is a StackOverflow like developed in Grails.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Grails is an Open Source, full stack, web application framework for the JVM. It takes advantage of the Groovy programming language and convention over configuration to provide a productive and stream-lined development experience.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Our website includes :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Google authentication using OAuth &lt;/li&gt;
  &lt;li&gt;admin management&lt;/li&gt;
  &lt;li&gt;rewards/medals on actions (questions, answers, etc.)&lt;/li&gt;
  &lt;li&gt;vote up/down a question/answer&lt;/li&gt;
  &lt;li&gt;add tags on questions and manage your favourite tags&lt;/li&gt;
  &lt;li&gt;sort questions by tags/answered, etc.&lt;/li&gt;
  &lt;li&gt;search questions and answers&lt;/li&gt;
&lt;/ul&gt;

&lt;figure&gt;
    &lt;a href=&quot;/images/grailsoverflow/index.png&quot;&gt;&lt;img src=&quot;/images/grailsoverflow/index.png&quot; /&gt;&lt;/a&gt;
	&lt;figcaption&gt;GrailsOverflow index&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure&gt;
    &lt;a href=&quot;/images/grailsoverflow/question-focus.png&quot;&gt;&lt;img src=&quot;/images/grailsoverflow/question-focus.png&quot; /&gt;&lt;/a&gt;
	&lt;figcaption&gt;Question page with answers&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure&gt;
    &lt;a href=&quot;/images/grailsoverflow/js-editor.png&quot;&gt;&lt;img src=&quot;/images/grailsoverflow/js-editor.png&quot; /&gt;&lt;/a&gt;
	&lt;figcaption&gt;Question/Answer advances JS editor&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure&gt;
    &lt;a href=&quot;/images/grailsoverflow/user-profile.png&quot;&gt;&lt;img src=&quot;/images/grailsoverflow/user-profile.png&quot; /&gt;&lt;/a&gt;
	&lt;figcaption&gt;User profile&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure&gt;
    &lt;a href=&quot;/images/grailsoverflow/medals-history.png&quot;&gt;&lt;img src=&quot;/images/grailsoverflow/medals-history.png&quot; /&gt;&lt;/a&gt;
	&lt;figcaption&gt;Medals &amp;amp; rewards management&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;GrailsOverflow is Open Source and &lt;a href=&quot;https://github.com/k-yak/grailsoverflow&quot;&gt;can be found on GitHub there&lt;/a&gt;.
This is an engineering school project (&lt;a href=&quot;http://www.isima.fr&quot;&gt;ISIMA&lt;/a&gt;), we had time restrictions and so it is a quick &amp;amp; dirty implementation. This project aims to practice and get started with Grails.&lt;/p&gt;

&lt;p&gt;You can try the website at &lt;a href=&quot;http://grow.drusy.cloudbees.net/&quot;&gt;http://grow.drusy.cloudbees.net/&lt;/a&gt;. Be patient, free cloudbees hosting could be slow at first launch :)&lt;/p&gt;

&lt;h3 id=&quot;we-were-2-working-on-this-project&quot;&gt;We were 2 working on this project&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/k-yak&quot;&gt;Florian Rotagnon&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/Drusy&quot;&gt;Kévin Renella&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

  &lt;p&gt;&lt;a href=&quot;http://localhost:4000/articles/grailsoverflow/&quot;&gt;GrailsOverflow&lt;/a&gt; was originally published by Kévin Renella at &lt;a href=&quot;http://localhost:4000&quot;&gt;Kévin Renella&lt;/a&gt; on January 01, 2014.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Files Drag & Drop]]></title>
  <link rel="alternate" type="text/html" href="http://www.filesdnd.com"/>
  <id>http://localhost:4000/articles/files-drag-and-drop</id>
  <updated>2014-04-08T00:00:00-00:00</updated>
  <published>2013-03-01T00:00:00+01:00</published>
  
  <author>
    <name>Kévin Renella</name>
    <uri>http://localhost:4000</uri>
    <email>kevin.renella@email.com</email>
  </author>
  <content type="html">&lt;p&gt;&lt;img style=&quot;float: right;&quot; src=&quot;/images/filesdnd/logo-blue-filesdnd.png&quot; /&gt;
Files Drag &amp;amp; Drop is a software that will let you easily transfer files from a computer to another one, and from a computer to an Android device.&lt;/p&gt;

&lt;p&gt;The goal was to make transfers between an Android device and a computer (running on Windows, OS X and Linux) easier. &lt;/p&gt;

&lt;h2 id=&quot;how-it-works-&quot;&gt;How it works :&lt;/h2&gt;
&lt;p&gt;Once you have installed the app on two devices (or on PC/Mac with the desktop version), Files Drag &amp;amp; Drop will automatically detect your devices on the Wi-Fi network. Then, simply drag &amp;amp; drop the content you want to send onto the device of your choice and your dat will be transfered.
From an Android device, use the share function of your device and choose Files Drag &amp;amp; Drop.&lt;/p&gt;

&lt;p&gt;More technicaly, we are using the Apple Bonjour protocol to detect devices over the Wi-Fi network. After a few days testing the app, we met some issues detecting devices due to multicast compatibility of routers and devices. So we decided to implement a broadcast detection manually to resolve our detection problems. Once your devices are properly detected and you simply drop a file (or text/url) on them, a TCP connection is established and the transfer begins.&lt;/p&gt;

&lt;p&gt;Try it, it’s awesome. &lt;/p&gt;

&lt;h2 id=&quot;why-should-you-choose-files-drag--drop-&quot;&gt;Why should you choose Files Drag &amp;amp; Drop ?&lt;/h2&gt;
&lt;p&gt;You don’t need to get the IP address of your device, don’t need to remember a password, and with the full version you can open files remotely !
It works only through Wifi for now, but we have plans to widen the possibilities in future.&lt;/p&gt;

&lt;h2 id=&quot;how-it-looks-&quot;&gt;How it looks :&lt;/h2&gt;
&lt;figure class=&quot;half&quot;&gt;
	&lt;a href=&quot;/images/filesdnd/screen-android-home.jpg&quot;&gt;&lt;img src=&quot;/images/filesdnd/screen-android-home.jpg&quot; /&gt;&lt;/a&gt;
	&lt;a href=&quot;/images/filesdnd/screen-android-send.jpg&quot;&gt;&lt;img src=&quot;/images/filesdnd/screen-android-send.jpg&quot; /&gt;&lt;/a&gt;
	&lt;figcaption&gt;Files Drag &amp;amp; Drop Android&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure&gt;
	&lt;a href=&quot;/images/filesdnd/screen-desktop.png&quot;&gt;&lt;img src=&quot;/images/filesdnd/screen-desktop.png&quot; /&gt;&lt;/a&gt;
	&lt;figcaption&gt;Files Drag &amp;amp; Drop Desktop&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h2 id=&quot;pricing&quot;&gt;Pricing&lt;/h2&gt;
&lt;p&gt;The desktop version is completly free, but the Android version is a trial. You can use most of the features, but you are limited to 5 file downloads per day (but no limit on upload, or text/url).
You can buy the full version in app, for approximatively $3.&lt;/p&gt;

&lt;p&gt;Here’s the list of features for the full version :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Receiving multiple files at once&lt;/li&gt;
  &lt;li&gt;Receiving a folder&lt;/li&gt;
  &lt;li&gt;Unlimited download&lt;/li&gt;
  &lt;li&gt;Open received files automatically (very useful !)&lt;/li&gt;
  &lt;li&gt;Background service (you don’t have to keep the app in the foreground) &lt;/li&gt;
  &lt;li&gt;No advertisements&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The desktop version is Open Source and &lt;a href=&quot;https://github.com/filesdnd&quot;&gt;available on GitHub&lt;/a&gt;, you can find the Android app on the &lt;a href=&quot;https://play.google.com/store/apps/details?id=com.filesdnd&quot;&gt;Android Market&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;more&quot;&gt;More&lt;/h2&gt;
&lt;p&gt;Files Drag &amp;amp; Drop is a software made by &lt;a href=&quot;https://github.com/NitroG42&quot;&gt;Thomas Coulange&lt;/a&gt; &amp;amp; &lt;a href=&quot;https://github.com/Drusy&quot;&gt;Kévin Renella&lt;/a&gt;, for our personnal use. We hope that it could help some more people :)&lt;/p&gt;

&lt;p&gt;Don’t hesitate to write any questions/suggestions/not-happy-feedback at contact@filesdnd.fr !&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://localhost:4000/articles/files-drag-and-drop/&quot;&gt;Files Drag & Drop&lt;/a&gt; was originally published by Kévin Renella at &lt;a href=&quot;http://localhost:4000&quot;&gt;Kévin Renella&lt;/a&gt; on March 01, 2013.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Raspberry PI robot - Tracking algorithm]]></title>
  <link rel="alternate" type="text/html" href="http://localhost:4000/articles/raspberry-robot/"/>
  <id>http://localhost:4000/articles/raspberry-robot</id>
  <updated>2014-04-08T00:00:00-00:00</updated>
  <published>2012-07-01T00:00:00+02:00</published>
  
  <author>
    <name>Kévin Renella</name>
    <uri>http://localhost:4000</uri>
    <email>kevin.renella@email.com</email>
  </author>
  <content type="html">&lt;p&gt;For our second year of engineering school project, we developed a tracking algorithm for an autonomous robot based on a Raspberry PI.
The goal was to ￼set up an application with 3 people in order to pilot a robot using manual control (Qt graphical user interface) or autopilot by camera. We have chosen low costs components to build our robot, including the Raspberry PI itself, USB controller, a portable battery, a little webcam and some wheels.&lt;/p&gt;

&lt;p&gt;Our tracking algorithm use &lt;strong&gt;Meanshift&lt;/strong&gt; with a color filtered image as initialization to track a red item. Using Meanshift, we can easily follow people that have a red item on their legs. Lets see the video!&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/1C_zbBZSwMs&quot; frameborder=&quot;0&quot;&gt; &lt;/iframe&gt;

&lt;h3 id=&quot;we-were-4-working-on-this-project&quot;&gt;We were 4 working on this project&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/NitroG42&quot;&gt;Thomas Coulange&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/k-yak&quot;&gt;Florian Rotagnon&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/ThomasMarques&quot;&gt;Thomas Marques&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/Drusy&quot;&gt;Kévin Renella&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

  &lt;p&gt;&lt;a href=&quot;http://localhost:4000/articles/raspberry-robot/&quot;&gt;Raspberry PI robot - Tracking algorithm&lt;/a&gt; was originally published by Kévin Renella at &lt;a href=&quot;http://localhost:4000&quot;&gt;Kévin Renella&lt;/a&gt; on July 01, 2012.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Placement manager]]></title>
  <link rel="alternate" type="text/html" href="http://localhost:4000/articles/placement-management/"/>
  <id>http://localhost:4000/articles/placement-management</id>
  <updated>2014-04-08T00:00:00-00:00</updated>
  <published>2012-06-01T00:00:00+02:00</published>
  
  <author>
    <name>Kévin Renella</name>
    <uri>http://localhost:4000</uri>
    <email>kevin.renella@email.com</email>
  </author>
  <content type="html">&lt;p&gt;I worked for the &lt;a href=&quot;http://w3.anr-proteus.fr/?q=node/124&quot;&gt;LASMEA&lt;/a&gt; laboratory in 2012 to improve the &lt;a href=&quot;/articles/nanotechnology-image-processing/&quot;&gt;hole detector&lt;/a&gt; and to develop a placement manager in C++/Qt. Before the development of this software, the management of students placements was done by editing Excel files. So, the goal is to simply :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;manage the students for schools and companies&lt;/li&gt;
  &lt;li&gt;assign placement to students &lt;/li&gt;
  &lt;li&gt;real time saving using SQLite&lt;/li&gt;
  &lt;li&gt;advances settings using XML&lt;/li&gt;
  &lt;li&gt;print internship agreement&lt;/li&gt;
  &lt;li&gt;have a reminder for todo tasks&lt;/li&gt;
  &lt;li&gt;embedded search&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;half&quot;&gt;
	&lt;a href=&quot;/images/placement-manager/report.jpg&quot;&gt;&lt;img src=&quot;/images/placement-manager/report-small.jpg&quot; /&gt;&lt;/a&gt;
	&lt;a href=&quot;/images/placement-manager/settings.jpg&quot;&gt;&lt;img src=&quot;/images/placement-manager/settings-small.jpg&quot; /&gt;&lt;/a&gt;
    &lt;a href=&quot;/images/placement-manager/summary.jpg&quot;&gt;&lt;img src=&quot;/images/placement-manager/summary-small.jpg&quot; /&gt;&lt;/a&gt;
	&lt;a href=&quot;/images/placement-manager/todo-list.jpg&quot;&gt;&lt;img src=&quot;/images/placement-manager/todo-list-small.jpg&quot; /&gt;&lt;/a&gt;
    &lt;figcaption&gt;Placement Manager screenshots&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;At this point, I began to be experienced with Qt, so I tried to make my code as generic as possible using dynamic views and stacked views. I also implemented multi-threaded SQLite request to optimize automatic saves and give to the user a better experience.&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://localhost:4000/articles/placement-management/&quot;&gt;Placement manager&lt;/a&gt; was originally published by Kévin Renella at &lt;a href=&quot;http://localhost:4000&quot;&gt;Kévin Renella&lt;/a&gt; on June 01, 2012.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Nanotechnology Image Processing]]></title>
  <link rel="alternate" type="text/html" href="http://localhost:4000/articles/nanotechnology-image-processing/"/>
  <id>http://localhost:4000/articles/nanotechnology-image-processing</id>
  <updated>2014-04-08T00:00:00-00:00</updated>
  <published>2012-03-01T00:00:00+01:00</published>
  
  <author>
    <name>Kévin Renella</name>
    <uri>http://localhost:4000</uri>
    <email>kevin.renella@email.com</email>
  </author>
  <content type="html">&lt;p&gt;This project started from a school project in 2011 and I worked again on this project in 2012 for the &lt;a href=&quot;http://w3.anr-proteus.fr/?q=node/124&quot;&gt;LASMEA&lt;/a&gt; laboratory.  &lt;/p&gt;

&lt;figure class=&quot;half&quot;&gt;
	&lt;a href=&quot;/images/nanotechnology-image-processing/about.jpg&quot;&gt;&lt;img src=&quot;/images/nanotechnology-image-processing/about-small.jpg&quot; /&gt;&lt;/a&gt;
	&lt;a href=&quot;/images/nanotechnology-image-processing/drop-detector.jpg&quot;&gt;&lt;img src=&quot;/images/nanotechnology-image-processing/drop-detector-small.jpg&quot; /&gt;&lt;/a&gt;
    &lt;a href=&quot;/images/nanotechnology-image-processing/nano-hole-detector.jpg&quot;&gt;&lt;img src=&quot;/images/nanotechnology-image-processing/nano-hole-detector-small.jpg&quot; /&gt;&lt;/a&gt;
	&lt;a href=&quot;/images/nanotechnology-image-processing/image-filters.jpg&quot;&gt;&lt;img src=&quot;/images/nanotechnology-image-processing/image-filters-small.jpg&quot; /&gt;&lt;/a&gt;
	&lt;figcaption&gt;Nanotechnology Image Processing screenshots&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h2 id=&quot;summary-extracted-from-the-project-report&quot;&gt;Summary extracted from the project report&lt;/h2&gt;

&lt;p&gt;During the second year of our studies in Computer Science, we devoted 14 weeks to a tutored project, lead by M. Chausse, senior lecturer at the Physics Department of the  I.U.T.&lt;/p&gt;

&lt;p&gt;The goal of this project was to develop a software application capable of analyzing pictures of nanomaterials, detecting roughly circular holes on those pictures, and determining the radius and smoothness of the detected holes, in order to calculate some physical properties of the pictured material. The final application had to be user-friendly and cross-platform, as it aimed to be used by both students and researchers. Initially, this project was a continuation of what had been started last year by another group of students. However, the existing code was hardly reusable, so we re-did everything from the ground up.&lt;/p&gt;

&lt;p&gt;We first started by learning some mathematics and algorithms that are used in the complex fields of computer vision and feature detection. We chose to use the OpenCV library, which is composed of numerous highly-optimized real-time image processing algorithms. We then developped the core of the project, in paralell with the user interface. When both were sufficiently evolved, we linked them up.&lt;/p&gt;

&lt;p&gt;The OpenCV built-in circle detection method had poor performance and the result quality was extremely dependant on parameters, which varied by great amounts from one image to another. For this reason, we developed a brand new algorithm to detect holes faster and with better accuracy. The blazing speed achieved by this new algorithm allowed us to implement image analysis on video streams provided by webcams or video records. It also permitted estimation of the holes’ smoothness, which was not possible using the algorithm provided by OpenCV.&lt;/p&gt;

&lt;p&gt;The application underwent many changes during its development, as users requested features and modifications. For example, we added a preview of the binary image our algorithm works on, as well as a user-driven detection method in which a user simply has to click a hole, and then lets the program do the rest. Considering we finished the application somewhat early, we later started developping some additional features that were not part of the initial project, such as tangent detection on microscopic drops.&lt;/p&gt;

&lt;h2 id=&quot;we-were-4-working-on-this-software&quot;&gt;We were 4 working on this software&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Thomas Coulange&lt;/li&gt;
  &lt;li&gt;Yannick Le Pennec&lt;/li&gt;
  &lt;li&gt;Kévin Renella&lt;/li&gt;
  &lt;li&gt;Jean-Baptiste Viller&lt;/li&gt;
&lt;/ul&gt;

  &lt;p&gt;&lt;a href=&quot;http://localhost:4000/articles/nanotechnology-image-processing/&quot;&gt;Nanotechnology Image Processing&lt;/a&gt; was originally published by Kévin Renella at &lt;a href=&quot;http://localhost:4000&quot;&gt;Kévin Renella&lt;/a&gt; on March 01, 2012.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Lagrange plot]]></title>
  <link rel="alternate" type="text/html" href="http://localhost:4000/articles/lagrange-plot/"/>
  <id>http://localhost:4000/articles/lagrange-plot</id>
  <updated>2014-04-08T00:00:00-00:00</updated>
  <published>2012-02-01T00:00:00+01:00</published>
  
  <author>
    <name>Kévin Renella</name>
    <uri>http://localhost:4000</uri>
    <email>kevin.renella@email.com</email>
  </author>
  <content type="html">&lt;p&gt;First year engineering school project, a very little bit of mathematics but fortunately Qt is always there to save my life :)&lt;/p&gt;

&lt;figure class=&quot;half&quot;&gt;
	&lt;a href=&quot;/images/lagrange-plot/lagrange-plot-curves.png&quot;&gt;&lt;img src=&quot;/images/lagrange-plot/lagrange-plot-curves.png&quot; /&gt;&lt;/a&gt;
	&lt;a href=&quot;/images/lagrange-plot/lagrange-plot-results.png&quot;&gt;&lt;img src=&quot;/images/lagrange-plot/lagrange-plot-results.png&quot; /&gt;&lt;/a&gt;
	&lt;figcaption&gt;Lagrange plot screenshots&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h3 id=&quot;we-were-2-working-on-this-project&quot;&gt;We were 2 working on this project&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Jeremy Martin&lt;/li&gt;
  &lt;li&gt;Kévin Renella&lt;/li&gt;
&lt;/ul&gt;

  &lt;p&gt;&lt;a href=&quot;http://localhost:4000/articles/lagrange-plot/&quot;&gt;Lagrange plot&lt;/a&gt; was originally published by Kévin Renella at &lt;a href=&quot;http://localhost:4000&quot;&gt;Kévin Renella&lt;/a&gt; on February 01, 2012.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Battery State]]></title>
  <link rel="alternate" type="text/html" href="http://localhost:4000/articles/battery-state/"/>
  <id>http://localhost:4000/articles/battery-state</id>
  <updated>2014-04-08T00:00:00-00:00</updated>
  <published>2012-01-01T00:00:00+01:00</published>
  
  <author>
    <name>Kévin Renella</name>
    <uri>http://localhost:4000</uri>
    <email>kevin.renella@email.com</email>
  </author>
  <content type="html">&lt;p&gt;Any of the available software on windows fits my needs about battery usage, wear level etc. so I decided to made to develop my own. I would like a software that :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;is really light&lt;/li&gt;
  &lt;li&gt;that can show me the waer level of my battery&lt;/li&gt;
  &lt;li&gt;is running in background&lt;/li&gt;
  &lt;li&gt;show the basics about the laptop battery&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I have written this software with C++/Qt and using the native C API of windows to get the battery informations.&lt;/p&gt;

&lt;figure class=&quot;half&quot;&gt;
	&lt;a href=&quot;/images/battery-state/battery-state.png&quot;&gt;&lt;img src=&quot;/images/battery-state/battery-state.png&quot; /&gt;&lt;/a&gt;
	&lt;a href=&quot;/images/battery-state/battery-tray.png&quot;&gt;&lt;img src=&quot;/images/battery-state/battery-tray.png&quot; /&gt;&lt;/a&gt;
	&lt;figcaption&gt;Battery State screenshots&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Currently this is a quick and dirty implementation and it is restricted to Windows but I plan to extend the compatibility to OS X, make it a bit more sexy and clean the code to put it on GitHub.&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://localhost:4000/articles/battery-state/&quot;&gt;Battery State&lt;/a&gt; was originally published by Kévin Renella at &lt;a href=&quot;http://localhost:4000&quot;&gt;Kévin Renella&lt;/a&gt; on January 01, 2012.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Shot detector]]></title>
  <link rel="alternate" type="text/html" href="http://localhost:4000/articles/shot-detector/"/>
  <id>http://localhost:4000/articles/shot-detector</id>
  <updated>2014-04-08T00:00:00-00:00</updated>
  <published>2011-11-01T00:00:00+01:00</published>
  
  <author>
    <name>Kévin Renella</name>
    <uri>http://localhost:4000</uri>
    <email>kevin.renella@email.com</email>
  </author>
  <content type="html">&lt;p&gt;For a long time, Metallic silhouette shooting was one of my passion :)&lt;/p&gt;

&lt;h2 id=&quot;metallic-silhouette-shooting-&quot;&gt;Metallic silhouette shooting ?&lt;/h2&gt;

&lt;figure&gt;
	&lt;img src=&quot;/images/shot-detector/sms-targets.jpg&quot; /&gt;
&lt;/figure&gt;

&lt;blockquote&gt;
  &lt;p&gt;Silhouette shooting involves firing at steel targets shaped like chickens, pigs, turkeys, and rams from various distances depending on the specific match. Unlike most conventional target games that utilize paper targets and numerical scoring rings, every shot fired at a metallic silhouette produces an immediate and clearly visible and audible result. It is either a hit or a miss.&lt;/p&gt;

  &lt;p&gt;All metallic silhouette shooting events held at Zia, whether using rifles or handguns, are fired standing from the unsupported off hand position. Accessories such as adjustable or hooked butt plates, palm rests, shooting coats, or slings are not allowed.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So, the goal is to shoot  small (too small…) metallic targets on various distances, and all of that is outdoor. But what happen if it’s a hard winter, a very very important championship is coming and you have to train yourself ?!&lt;/p&gt;

&lt;p&gt;The shot detector is made for you, you can adapt your guns with a beam pointer laser, shot indoor (without real bullets…) and see your results with the shot detector app!&lt;/p&gt;

&lt;figure&gt;
	&lt;a href=&quot;/images/shot-detector/shot-detector.jpg&quot;&gt;&lt;img src=&quot;/images/shot-detector/shot-detector-small.jpg&quot; /&gt;&lt;/a&gt;
	&lt;figcaption&gt;Shot detector screenshot&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;For this software, I have chosen C++/Qt and OpenCV for camera handler and image processing.&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://localhost:4000/articles/shot-detector/&quot;&gt;Shot detector&lt;/a&gt; was originally published by Kévin Renella at &lt;a href=&quot;http://localhost:4000&quot;&gt;Kévin Renella&lt;/a&gt; on November 01, 2011.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[iPad account manager]]></title>
  <link rel="alternate" type="text/html" href="http://localhost:4000/articles/ipad-accounts-manager/"/>
  <id>http://localhost:4000/articles/ipad-accounts-manager</id>
  <updated>2014-04-08T00:00:00-00:00</updated>
  <published>2011-07-01T00:00:00+02:00</published>
  
  <author>
    <name>Kévin Renella</name>
    <uri>http://localhost:4000</uri>
    <email>kevin.renella@email.com</email>
  </author>
  <content type="html">&lt;p&gt;My first experience as a mobile developer began on iOS with the iPad when I travelled to Scotland for 3 month. I have chosen my own subject and worked on an account management application synchronised on the web. This application allow the user to register every single transaction to keep its accont management up to date.&lt;/p&gt;

&lt;p&gt;The code should remain private, but I am sharing this demo.&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;http://www.youtube.com/embed/VIRzOkRzKeA&quot; frameborder=&quot;0&quot;&gt; &lt;/iframe&gt;

  &lt;p&gt;&lt;a href=&quot;http://localhost:4000/articles/ipad-accounts-manager/&quot;&gt;iPad account manager&lt;/a&gt; was originally published by Kévin Renella at &lt;a href=&quot;http://localhost:4000&quot;&gt;Kévin Renella&lt;/a&gt; on July 01, 2011.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Remote webcams]]></title>
  <link rel="alternate" type="text/html" href="http://localhost:4000/articles/qt-remote-webcam/"/>
  <id>http://localhost:4000/articles/qt-remote-webcam</id>
  <updated>2014-04-08T00:00:00-00:00</updated>
  <published>2011-06-01T00:00:00+02:00</published>
  
  <author>
    <name>Kévin Renella</name>
    <uri>http://localhost:4000</uri>
    <email>kevin.renella@email.com</email>
  </author>
  <content type="html">&lt;p&gt;As I told, my favourite programming language remain the C++, using the Qt framework… So I began to develop some amazing desktop applications such as this remote webcam client. This software allow you to control multiple webcam remotely through wifi network or over the internet.&lt;/p&gt;

&lt;p&gt;This application was developped in C++/Qt use OpenCV to retrieve webcam handlers and images. To test this application in real conditions, I tried to compile it on a Raspberry PI and it worked pretty well (with some lags), so I definitively can make many webcams for a little price and spy the places I want :)&lt;/p&gt;

&lt;figure&gt;
	&lt;a href=&quot;/images/webcam/qt-webcam.jpg&quot;&gt;&lt;img src=&quot;/images/webcam/qt-webcam.jpg&quot; /&gt;&lt;/a&gt;
&lt;/figure&gt;

  &lt;p&gt;&lt;a href=&quot;http://localhost:4000/articles/qt-remote-webcam/&quot;&gt;Remote webcams&lt;/a&gt; was originally published by Kévin Renella at &lt;a href=&quot;http://localhost:4000&quot;&gt;Kévin Renella&lt;/a&gt; on June 01, 2011.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Plants vs Zombies SFML]]></title>
  <link rel="alternate" type="text/html" href="http://localhost:4000/articles/sfml-pvz/"/>
  <id>http://localhost:4000/articles/sfml-pvz</id>
  <updated>2014-04-08T00:00:00-00:00</updated>
  <published>2010-10-01T00:00:00+02:00</published>
  
  <author>
    <name>Kévin Renella</name>
    <uri>http://localhost:4000</uri>
    <email>kevin.renella@email.com</email>
  </author>
  <content type="html">&lt;p&gt;When I started programming C++ software, I have always dreamt to develop a little game. After some practices of hangman and brick breakers in second year of Bachelor of Science in computer science (DUT Informatique), we had to develop a Plants vs Zombies like using C++ and SFML. Let’s see the video.&lt;/p&gt;

&lt;p&gt;Yep, I am not a graphist… But it remains fun!! :))&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/XsJwiJWpRaI&quot; frameborder=&quot;0&quot;&gt; &lt;/iframe&gt;

&lt;h4 id=&quot;who-worked-on-that-project-&quot;&gt;Who worked on that project ?&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/NitroG42&quot;&gt;Thomas Coulange&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/Drusy&quot;&gt;Kévin Renella&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

  &lt;p&gt;&lt;a href=&quot;http://localhost:4000/articles/sfml-pvz/&quot;&gt;Plants vs Zombies SFML&lt;/a&gt; was originally published by Kévin Renella at &lt;a href=&quot;http://localhost:4000&quot;&gt;Kévin Renella&lt;/a&gt; on October 01, 2010.&lt;/p&gt;</content>
</entry>

</feed>
